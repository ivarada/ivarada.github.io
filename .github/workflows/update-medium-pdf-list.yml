name: Update Medium PDF Listing

on:
  push:
    paths:
      - "medium/pdf/**"  # Trigger only if files in the "pdfs" directory are modified
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  update-pdf-list:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python (for the script that generates the Markdown file)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      # Step 3: Generate the Markdown file
      - name: Generate PDF Listing
        run: |
          python -c "
          import os
          from collections import defaultdict
          
          pdf_dir = 'medium/pdf'
          output_file = 'medium/pdf/index.md'
          markdown_content = (
              '---\nlayout: default\ntitle: PDF Listing\n---\n\n'
              '# PDF Listing\n\nHere are the available PDFs:\n\n'
          )
          
          # Month mapping: '01' -> 'January', ..., '12' -> 'December'
          MONTH_NAMES = {
              '01': 'January', '02': 'February', '03': 'March', '04': 'April',
              '05': 'May', '06': 'June', '07': 'July', '08': 'August',
              '09': 'September', '10': 'October', '11': 'November', '12': 'December'
          }
          
          pdfs_by_year_month = defaultdict(lambda: defaultdict(list))
          
          for pdf in sorted(os.listdir(pdf_dir), reverse=True):
              if pdf.endswith('.pdf'):
                  try:
                      date_part = pdf.split(' - ')[0]
                      year, month, _ = date_part.split('-')
                      pdfs_by_year_month[year][month].append(pdf)
                  except Exception:
                      continue  # Skip files not matching the format
          
          for year in sorted(pdfs_by_year_month.keys(), reverse=True):
              markdown_content += f'## {year}\n'
              for month in sorted(pdfs_by_year_month[year].keys(), reverse=True):
                  month_name = MONTH_NAMES.get(month, '')
                  markdown_content += f'### {month} - {month_name}\n'
                  for pdf in sorted(pdfs_by_year_month[year][month], reverse=True):
                      markdown_content += f'- [{pdf}]({pdf})\n'
                  markdown_content += '\n'
          
          with open(output_file, 'w') as f:
              f.write(markdown_content)
          "

      # Step 4: Commit and push changes
      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add medium/pdf/index.md
          git commit -m "Update PDF Listing"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

